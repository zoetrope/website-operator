name: CI
on:
  push:
    tags:
      - 'v*'
jobs:
  image:
    name: Push container image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - run: TAG=${GITHUB_REF#refs/tags/v} make build-operator-image
      - run: TAG=${GITHUB_REF#refs/tags/v} make build-checker-image
      - run: TAG=${GITHUB_REF#refs/tags/v} make build-ui-image
      - name: Login to ghcr.io
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - run: TAG=${GITHUB_REF#refs/tags/v} make push-operator-image
      - run: TAG=${GITHUB_REF#refs/tags/v} make push-checker-image
      - run: TAG=${GITHUB_REF#refs/tags/v} make push-ui-image
  release:
    name: Release on GitHub
    needs: image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: aquaproj/aqua-installer@v1.1.2
        with:
          aqua_version: v1.25.0
          aqua_opts: ""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: make build/install.yaml
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            See [CHANGELOG.md](./CHANGELOG.md) for details.
          draft: false
          prerelease: ${{ contains(github.ref, '-') }}
      - name: Upload Manifest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/install.yaml
          asset_name: install.yaml
          asset_content_type: application/x-yaml
